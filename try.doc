// @ts-nocheck
import { useMemo, useState, useEffect } from 'react';
import { Routes, Route, useNavigate } from 'react-router-dom';

import './App.scss';
import Navigation from './components/Navigation';
import Home from './pages/Home';
import Product from './pages/Product';
import Cart from './pages/Cart';
import Login from './pages/Login';
import { useStore } from './store/StoreContext';
// import Token from './Token/tokens';

import { isUserAuthenticated } from './helpers/auth';

const ProtectedRoute = () => {
  return (
    <>
      <Navigation />
      <Routes>
        <Route index path="/" element={<Home />} />
        <Route index path="/product/:id" element={<Product />} />
        <Route index path="/cart" element={<Cart />} />
      </Routes>
    </>
  );
};
// if (token) localStorage.setItem('token', token);
const [token, setToken] = useState(null);
useEffect(() => {
  if (isUserAuthenticated()) {
    const userToken = localStorage.getItem('token');
    setToken(userToken);
  }
}, [isUserAuthenticated()]);

function App() {
  const navigate = useNavigate();

  useEffect(() => {
    if (!isUserAuthenticated()) navigate('/login');
    if (isUserAuthenticated()) {
      navigate('/');
    }
  }, [isUserAuthenticated()]);

  return (
    <>
      <Routes>
        <Route path="/*" element={<ProtectedRoute />} />
        <Route path="/login" element={<Login />} />
      </Routes>
    </>
  );
}
/////////////////////////////////
Token code///////

///
function saveToken(token) {
  localStorage.setItem('token', JSON.stringify(token));
}

function getToken() {
  return JSON.parse(localStorage.getItem('token'));
}

useEffect(() => {
  if (isUserAuthenticated()) {
    const token = getToken();
    if (token) {
      saveToken(token);
    }
  }
}, [isUserAuthenticated()]);